# So we have a decent level of working functionality in Chagu. It is possible
# to produce some output visualisations using short, simple scripts. In
# retrospect, driving the development of this software using tests would have
# been ideal because it means that the interface is designed for the user, as
# opposed to match the functionality of Chagu. Unfortunatly, this is not what I
# did when starting this project. Future features will warrant the use of
# test-driven development to save time, reduce code complexity, and make me
# happier. This will not retroactively fix existing features. To make up for
# this, I am developing some tests to back-test this project. These black box
# tests will exist from the user-interface level to the level of internals. The
# rest of this note describes some testing objectives.

* TODO Write test descriptions for other files
** TODO filters.py
** TODO mask.py
** TODO pipeline.py
** TODO render.py
** TODO sources.py
** TODO termini.py
** TODO tracking.py
