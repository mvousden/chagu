* IN-PROGRESS [#S] Write unit tests

  Good luck!

* TODO [#A] Choose sensible defaults for visualise_animate_rotate

  visualise_animate_rotate uses defaults for a specific example. Change these
  defaults to calculate positions in the rotation from the bounding box of the
  data.

* TODO [#A] Resolution values for masks must be greater than zero

  If the resolution for a mask is zero, then no vectors will be drawn. This is
  very confusing for our pipeline, and will confuse the user.

* TODO [#A] ConfigParser implementation

  Implement an interface to ConfigParser, meaning that the user doesn't even
  need to write a script. This means each dataset has its own set of properties
  that will render the vector fields consistently.

* TODO [#A] Create examples in IPython notebooks.

  IPython notebooks render automatically in the Github pages. These would go a
  long way to selling this work to others.

* TODO [#B] Advanced pipeline features

  Allow pipeline disconnections to make the visualisation class more robust. It
  would also help users when creating multiple different visualisations from
  the same file.

* TODO [#B] Advanced sourcing

  Allow the user to change the file loaded by a given fileReader object, and to
  draw multiple datasets simultaneously. The motivation for the former is that
  the user may wish to create an animation through a dataseries. Not sure of a
  motivation for the latter, but it might already "just work".

* TODO [#B] Fix automatic camera

  Make the camera align correctly to show the entire dataset. Part of this is
  to find a zoom automatically. Window size should be defined by the user to
  create their animation (or fixed, perhaps at a known HD resolution).

* TODO [#B] User cannot use fileReaders in visualisation for manual piping

  Since visualisation initialisation does not (can not) return the name of the
  fileReader object, the user has some difficulty constructing a pipeline
  manually. Find a fix for this problem; some way for the user to get hold of
  the name easily.

* TODO [#C] Implement observers

  More verbosity is usually a good thing with scripting libraries, and this
  should fairly simply allow a user to debug a problem without significant
  effort.
* TODO [#C] Parameters for masking vector fields

  Come up with a more intuitive way of doing the masking for cone/nasty
  vectors. Perhaps making the cone length, radius and resolution of the cones
  optional from the user's perspective would help with this, and choose
  sensible values for them depending on the domain/resolution they select, if
  any.

* TODO [#C] Progress bar for animate_rotate

  Instead of using a series of print statements for each image, use progressbar
  to show the progress of the rendering process.
